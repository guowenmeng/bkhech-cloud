server:
  port: 8001

spring:
  application:
    name: customer-service
  cloud:
    circuitbreaker:
      hystrix:
        enabled: true
    stream:
      bindings:
        output:
          destination: messageCenterTopic
          content-type: application/json
      rabbit:
        bindings:
          output:
            producer:
              # 根据消息类型动态路由消息。
              # 构建消息时，自定义一个 key 为 messageType 的 header，而我们在定义生产者时，
              # 指定了 routingKeyExpression 为 headers.messageType，也就是说，在投递时
              # 会以 messageType 的值作为最后的 routingKey
              routingKeyExpression: headers.messageType # 生产者配置RabbitMq的动态路由键
  rabbitmq:
    addresses: 192.168.85.125
    port: 5672  # 注意，这里是5672，不是访问界面用的15672，这个是默认值
    username: admin
    password: admin
    virtual-host: /


# 打印项目中所有 RequestMappingHandler url
logging:
  level:
    com.bkhech.cloud.provider.api: debug
    org.springframework.web.servlet.mvc.method.annotation: trace

eureka:
  client:
    register-with-eureka: true  #服务注册开关
    fetch-registry: true #服务发现开关
    service-url:
      defaultZone: http://peer1:8761/eureka

# feign 超时设置。
# 当设置 feign.hystrix.enabled=true，启用 feign-hystrix 时会导致 feign 的超时设置失效
feign:
  client:
    config:
      default:
        loggerLevel: FULL #日志等级
        connectTimeout: 5000 #连接超时
        readTimeout: 5000 #读取超时
  hystrix:
    enabled: true
    compression:
      request:
        enabled: true
        mime-types: text/xml,application/xml,application/json
        min-request-size: 2048
      response:
        enabled: true
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000 # 设置hystrix的超时时间（timeoutInMilliseconds）要小于feign的超时时间（readTimeout）, 之后才调用降级方法
